{"version":3,"sources":["../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","views/LoginView/LoginView.jsx"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","LoginView","useState","email","setEmail","password","setPassword","dispatch","useDispatch","className","onSubmit","e","preventDefault","authOperations","login","name","type","onChange","target"],"mappings":"6LAIe,SAASA,EAAeC,EAAKC,GAC1C,OCLa,SAAyBD,GACtC,GAAIE,MAAMC,QAAQH,GAAM,OAAOA,EDIxB,CAAeA,IELT,SAA+BA,EAAKC,GACjD,GAAsB,qBAAXG,QAA4BA,OAAOC,YAAYC,OAAON,GAAjE,CACA,IAAIO,EAAO,GACPC,GAAK,EACLC,GAAK,EACLC,OAAKC,EAET,IACE,IAAK,IAAiCC,EAA7BC,EAAKb,EAAII,OAAOC,cAAmBG,GAAMI,EAAKC,EAAGC,QAAQC,QAChER,EAAKS,KAAKJ,EAAGK,QAEThB,GAAKM,EAAKW,SAAWjB,GAH8CO,GAAK,IAK9E,MAAOW,GACPV,GAAK,EACLC,EAAKS,EACL,QACA,IACOX,GAAsB,MAAhBK,EAAW,QAAWA,EAAW,SAC5C,QACA,GAAIJ,EAAI,MAAMC,GAIlB,OAAOH,GFnBuB,CAAqBP,EAAKC,IAAM,OAAAmB,EAAA,GAA2BpB,EAAKC,IGLjF,WACb,MAAM,IAAIoB,UAAU,6IHIgF,K,gIIAvF,SAASC,IACtB,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACMC,EAAWC,cAgBjB,OACE,cAAC,IAAD,UACE,uBAAMC,UAAU,UAAUC,SATT,SAACC,GACpBA,EAAEC,iBACFL,EAASM,IAAeC,MAAM,CAAEX,QAAOE,cACvCD,EAAS,IACTE,EAAY,KAKV,UACE,oBAAIG,UAAU,WAAd,mBACA,wBAAOA,UAAU,eAAjB,UACE,yCACA,uBACEA,UAAU,WACVM,KAAK,QACLC,KAAK,QACLpB,MAAOO,EACPc,SAzBgB,SAAC,GAA2B,IAAfrB,EAAc,EAAxBsB,OAAUtB,MACrCQ,EAASR,SA2BL,wBAAOa,UAAU,eAAjB,UACE,4CACA,uBACEA,UAAU,WACVM,KAAK,WACLC,KAAK,WACLpB,MAAOS,EACPY,SAhCmB,SAAC,GAA2B,IAAfrB,EAAc,EAAxBsB,OAAUtB,MACxCU,EAAYV,SAkCR,wBAAQa,UAAU,SAAlB","file":"static/js/4.b26b7d50.chunk.js","sourcesContent":["import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import { useState } from \"react\";\r\nimport authOperations from \"../../redux/auth/authOperations\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport Container from \"../../components/Container/Container\";\r\n\r\nexport default function LoginView() {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n\r\n  const handleEmailChange = ({ target: { value } }) => {\r\n    setEmail(value);\r\n  };\r\n  const handlePasswordChange = ({ target: { value } }) => {\r\n    setPassword(value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    dispatch(authOperations.login({ email, password }));\r\n    setEmail(\"\");\r\n    setPassword(\"\");\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <form className=\"regForm\" onSubmit={handleSubmit}>\r\n        <h2 className=\"regTitle\">Login</h2>\r\n        <label className=\"regFormLabel\">\r\n          <span>Email</span>\r\n          <input\r\n            className=\"regInput\"\r\n            name=\"email\"\r\n            type=\"email\"\r\n            value={email}\r\n            onChange={handleEmailChange}\r\n          />\r\n        </label>\r\n        <label className=\"regFormLabel\">\r\n          <span>Password</span>\r\n          <input\r\n            className=\"regInput\"\r\n            name=\"password\"\r\n            type=\"password\"\r\n            value={password}\r\n            onChange={handlePasswordChange}\r\n          />\r\n        </label>\r\n        <button className=\"regBtn\">Login</button>\r\n      </form>\r\n    </Container>\r\n  );\r\n}"],"sourceRoot":""}